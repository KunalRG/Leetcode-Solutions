Link: https://leetcode.com/explore/learn/card/fun-with-arrays/527/searching-for-items-in-an-array/3251/


*Algorithm:
--if size of arr is less than constrain return false
--find for position of max member
	--if it is equals to arr.size()-1 return false

--incline and decline checking using loop
	

*Code:

class Solution {
public:
    bool validMountainArray(vector<int>& arr) {
        bool incline,decline;
        incline=decline=false;
        if(arr.size()<3){
            return false;
        }
        int max=arr[0];
        int top=0;
        for(int i=0;i<arr.size();i++){
            if(arr[i]>=max) {max=arr[i];top=i;}
        }
        if(top==arr.size()-1) return false;
        for(int j=0;j<top;j++){
            if(arr[j]<arr[j+1]) incline=true;
            else {incline=false;break;}
        }
        for(int j=top;j<arr.size()-1;j++){
            if(arr[j]>arr[j+1]) decline=true;
            else {decline=false;break;}
        }
        if(incline && decline){return true;}
        else return false;
    }
};